name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
      fail-fast: false

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install frontend dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Cache Vite/esbuild cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/vite
            node_modules/.vite
          key: ${{ runner.os }}-vite-${{ hashFiles('**/pnpm-lock.yaml', '**/vite.config.*', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-vite-

      - name: Type-check and build frontend
        run: pnpm run build

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            src-tauri -> target

      - name: Install Linux dependencies (Tauri)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends \
            libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Cargo check
        run: cargo check
        working-directory: src-tauri

      - name: Cargo clippy
        run: cargo clippy -- -D warnings
        working-directory: src-tauri

      - name: Rust format check
        run: cargo fmt --all -- --check
        working-directory: src-tauri


